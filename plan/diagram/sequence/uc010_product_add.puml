@startuml
!include ./config.txt

title UC010: 新商品登録機能 シーケンス図
actor ユーザ as user
activate user
participant "ProductAdd\nController" as controller
participant "ProductCategory\nService" as svc1
participant "Product\nService" as svc2
participant "ProductCategory\nRepository" as repo3
participant "Product\nRepository" as repo1
participant "ProductStock\nRepository" as repo2
database DB

' 入力画面
user -> controller ++ : GET\n/admin/product-add/form\nform()
controller -> controller : setUpForm()
controller -> controller : bind()
controller -> svc1 ++ : findAll()
svc1 -> repo3 ++ : findAll()
repo3 -> DB ++ : SELECT文
DB --> repo3 -- : List<ProductCategory>
repo3 --> svc1 -- : List<ProductCategory>
svc1 --> controller -- : List<ProductCategory>
controller -> controller : Model追加\n（商品カテゴリリスト）
controller --> user -- : 入力画面

' 確認画面
user -> user : 商品情報入力
user -> controller ++ : POST\n/admin/product-add/confirm\nconfirm()
controller -> controller : バリデート
controller -> controller : Model追加\n（選択した商品カテゴリ）
controller -> controller : Model追加\n（商品画像Base64）
controller -> controller : Model追加\n（商品画像バイトデータ）
note right: 画像データを完了画面で使うのでセッション格納
controller --> user -- : 確認画面

' 完了画面
user -> user : 入力内容確認
user -> controller ++ : POST\n/admin/product-add/execute\nexecute()
controller -> controller : セッション確認
note right: セッション情報がない場合はシステムエラー
controller -> controller : 画像保存ファイル名\nをModelに追加
controller -> controller : フォームを\nエンティティに変換
controller -> svc2 ++ : insert(Product product)
note right: トランザクション処理
svc2 -> repo1 ++ : insert(Product product)
repo1 -> DB ++ : INSERT文
DB --> repo1 -- : void
repo1 --> svc2 -- : void
svc2 -> repo2 ++ : insert(ProductStock)
repo2 -> DB ++ : INSERT文
DB --> repo2 -- : void
repo2 --> svc2 -- : void
svc2 --> controller -- : void
user <-- controller -- : リダイレクト
user -> controller ++ : GET\n/admin/product-add/complete\ncomplete()
controller -> controller : セッション破棄
controller -> controller : Modelに追加\n（商品名）
controller --> user -- : 完了画面

deactivate user

@enduml