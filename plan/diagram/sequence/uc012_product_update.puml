@startuml

skin rose
title UC012: 商品修正機能 シーケンス図
skinparam shadowing false
actor "ユーザ" as user
activate user
participant "ProductUpdate\nController" as ctrl
participant "ProductCategory\nService" as svc1
participant "ProductCategory\nRepository" as repo1
participant "Product\nService" as svc2
participant "Product\nRepository" as repo2
participant "ProductStock\nRepository" as repo3
database DB as db

' 入力画面
user -> ctrl ++ : GET\n/admin/product-update/{productId}\nform(productId)
ctrl -> ctrl : setUpForm()
ctrl -> ctrl : bind()
ctrl -> svc1 ++ : findAll()
note right: 商品カテゴリリスト取得
svc1 -> repo1 ++ : findAll()
repo1 -> db ++ : SQL SELECT
db --> repo1 -- : List<ProductCategory>
repo1 -> svc1 -- : List<ProductCategory>
svc1 --> ctrl -- : List<ProductCategory>
ctrl -> svc2 ++ : findById(productId)
note right: 商品情報取得
svc2 -> repo2 ++ : findById\n(productId)
repo2 -> db ++ : SQL SELECT
db --> repo2 -- : Product
repo2 --> svc2 -- : Product
svc2 --> ctrl -- : Product
ctrl -> ctrl : エンティティから\nフォームに変換
ctrl -> ctrl : Model追加\n（フォーム）
ctrl -> ctrl : Model追加\n（商品カテゴリリスト）
ctrl -> ctrl : Model追加\n（商品）
ctrl -> user -- : 入力画面

' 確認画面
user -> user : 商品情報修正
user -> ctrl ++ : POST\n/admin/product-update/confirm\nconfirm()
ctrl -> ctrl : バリデート
alt 画像修正あり
    ctrl -> ctrl : セッション追加\n（新画像Base64）
    ctrl -> ctrl : セッション追加\n（新画像バイトデータ）
else 画像修正なし
    ctrl -> ctrl : Model追加\n（"/img/"+ファイル名）
end
ctrl -> user -- : 確認画面

' 完了画面
user -> user : 入力内容確認
user -> ctrl ++ : POST\n/admin/product-update/complete\ncomplete()
ctrl -> ctrl : セッション確認
note right: フォームが空の場合はシステムエラー
ctrl -> ctrl : フォームから\nエンティティに変換
ctrl -> svc2 ++ : update(Product)
svc2 -> repo2 ++ : update(Product)
repo2 -> db ++ : SQL UPDATE
db --> repo2 -- : void
repo2 --> svc2 -- : void
svc2 -> repo3 ++ : update(ProductStock)
repo3 -> db ++ : SQL UPDATE
db --> repo3 -- : void
repo3 --> svc2 -- : void
svc2 --> ctrl -- : void
ctrl -> ctrl : セッション破棄
ctrl -> ctrl : Model追加（商品名）
ctrl -> user -- : 完了画面

@enduml